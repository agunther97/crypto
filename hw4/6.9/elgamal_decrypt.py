import math

def multiplicative_inverse(a,b):
    a_0 = a
    b_0 = b
    t_0 = 0
    t = 1
    q = math.floor(a_0/b_0)
    r = a_0 - (q * b_0)
    while r > 0:
        temp = (t_0 - (q * t)) % a
        t_0 = t
        t = temp
        a_0 = b_0
        b_0 = r
        q = math.floor(a_0/b_0)
        r = a_0 - (q * b_0)
    return t

def ntt(data):
    alphabet = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
    # converted from calculator code
    if type(data) is int:
        data = [data]
    output=""
    for n in data:
        segOutput=""
        z=len(alphabet)
        try:
            varPow = math.floor(math.log(n,z)) #biggest power
        except:
            varPow = 0
        if not (3 is None):
            varPow = 2
        while (varPow>=0):
            div = pow(z,varPow)
            char=alphabet[math.floor(n/div+0.001)]
            n=n%div
            varPow-=1
            segOutput+=char
        output+=segOutput
    return output

def elgamal_decrypt(y,p,a):
    #converted from calculator code
    t=[]
    d=len(y[1])
    for j in range(0,d,1):
        y1=y[0][j]
        y2=y[1][j]
        s=(y2*multiplicative_inverse(p,pow(y1,a,p))) % p
        t.append(s)
    return t

if __name__ == "__main__":
    y = [   3781, 14409, 31552, 3930, 27214, 15442, 5809, 30274,
            5400, 31486, 19936, 721, 27765, 29284, 29820, 7710,
            31590, 26470, 3781, 14409, 15898, 30844, 19048, 12914,
            16160, 3129, 301, 17252, 24689, 7776, 28856, 15720,
            30555, 24611, 20501, 2922, 13659, 5015, 5740, 31233,
            1616, 14170, 4294, 2307, 2320, 29174, 3036, 20132,
            14130, 22010, 25910, 19663, 19557, 10145, 18899, 27609,
            26004, 25056, 5400, 31486, 9526, 3019, 12962, 15189,
            29538, 5408, 3149, 7400, 9396, 3058, 27149, 20535,
            1777, 8737, 26117, 14251, 7129, 18195, 25302, 10248,
            23258, 3468, 26052, 20545, 21958, 5713, 346, 31194,
            8836, 25898, 8794, 17358, 1777, 8737, 25038, 12483,
            10422, 5552, 1777, 8737, 3780, 16360, 11685, 133,
            25115, 10840, 14130, 22010, 16081, 16414, 28580, 20845,
            23418, 22058, 24139, 9580, 173, 17075, 2016, 18131,
            19886, 22344, 21600, 25505, 27119, 19921, 23312, 16906,
            21563, 7891, 28250, 21321, 28327, 19237, 15313, 28649,
            24271, 8480, 26592, 25457, 9660, 7939, 10267, 20623,
            30499, 14423, 5839, 24179, 12846, 6598, 9284, 27858,
            24875, 17641, 1777, 8737, 18825, 19671, 31306, 11929,
            3576, 4630, 26664, 27572, 27011, 29164, 22763, 8992,
            3149, 7400, 8951, 29435, 2059, 3977, 16258, 30341,
            21541, 19004, 5865, 29526, 10536, 6941, 1777, 8737,
            17561, 11884, 2209, 6107, 10422, 5552, 19371, 21005,
            26521, 5803, 14884, 14280, 4328, 8635, 28250, 21321,
            28327, 19237, 15313, 28649 ]
    y1 = []
    y2 = []
    for i in range(0, len(y),2):
        y1.append(y[i])
        y2.append(y[i+1])
    num = elgamal_decrypt([y1,y2], 31847, 7899)
    txt = [ntt(x) for x in num]
    print(txt)